{
  "manifestVersion": "3.0",
  "impls": {
    "e2de3b8c3998464b24f0c3fbaf1e5bc8a2a2e58f32ce75eb37aeda7505037d6c": {
      "address": "0x345cA3e014Aaf5dcA488057592ee47305D9B3e10",
      "txHash": "0x3aa1f77f62a69ba05e3d0b473bb489bdc5d6fad22c3359e3ec3d46e1bf0b4bed",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "QLCToken",
            "label": "_lockedOrigin",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "QLCToken.sol:16"
          },
          {
            "contract": "QLCToken",
            "label": "_lockedAmount",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "QLCToken.sol:17"
          },
          {
            "contract": "QLCToken",
            "label": "_lockedUser",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "QLCToken.sol:18"
          },
          {
            "contract": "QLCToken",
            "label": "_lockedHeight",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "QLCToken.sol:19"
          },
          {
            "contract": "QLCToken",
            "label": "_unlockedHeight",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "QLCToken.sol:20"
          },
          {
            "contract": "QLCToken",
            "label": "_issueInterval",
            "type": "t_uint256",
            "src": "QLCToken.sol:22"
          },
          {
            "contract": "QLCToken",
            "label": "_destoryInterval",
            "type": "t_uint256",
            "src": "QLCToken.sol:23"
          },
          {
            "contract": "QLCToken",
            "label": "_minIssueAmount",
            "type": "t_uint256",
            "src": "QLCToken.sol:24"
          },
          {
            "contract": "QLCToken",
            "label": "_minDestroyAmount",
            "type": "t_uint256",
            "src": "QLCToken.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5f5df19f8b3fdcf32fd5fc58af593d57ab904d0d7f615e980847975b3308012a": {
      "address": "0x2C2B9C9a4a25e24B174f26114e8926a9f2128FE4",
      "txHash": "0x64fce6d1139b9ca64c7ccccdbed9a928e963bcd55178f1007b220e20b50d532f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "QLCTokenV2",
            "label": "_lockedOrigin",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "QLCTokenV2.sol:18"
          },
          {
            "contract": "QLCTokenV2",
            "label": "_lockedAmount",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "QLCTokenV2.sol:19"
          },
          {
            "contract": "QLCTokenV2",
            "label": "_lockedUser",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "QLCTokenV2.sol:20"
          },
          {
            "contract": "QLCTokenV2",
            "label": "_lockedHeight",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "QLCTokenV2.sol:21"
          },
          {
            "contract": "QLCTokenV2",
            "label": "_unlockedHeight",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "QLCTokenV2.sol:22"
          },
          {
            "contract": "QLCTokenV2",
            "label": "_issueInterval",
            "type": "t_uint256",
            "src": "QLCTokenV2.sol:24"
          },
          {
            "contract": "QLCTokenV2",
            "label": "_destoryInterval",
            "type": "t_uint256",
            "src": "QLCTokenV2.sol:25"
          },
          {
            "contract": "QLCTokenV2",
            "label": "_minIssueAmount",
            "type": "t_uint256",
            "src": "QLCTokenV2.sol:26"
          },
          {
            "contract": "QLCTokenV2",
            "label": "_minDestroyAmount",
            "type": "t_uint256",
            "src": "QLCTokenV2.sol:27"
          },
          {
            "contract": "QLCTokenV2",
            "label": "lockedAmount",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "QLCTokenV2.sol:29"
          },
          {
            "contract": "QLCTokenV2",
            "label": "active",
            "type": "t_bool",
            "src": "QLCTokenV2.sol:31"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xf25186B5081Ff5cE73482AD761DB0eB0d25abfBF",
    "txHash": "0x1894fcdae6a3cfcf7abfc8e5f6f1bbb0e20101d3c315542159a9a18dae6fb97a"
  }
}
